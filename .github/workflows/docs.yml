name: Docs

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    name: Build & Link Check
    runs-on: ubuntu-latest
    env:
      PIP_INDEX_URL: https://download.pytorch.org/whl/cpu
      PIP_EXTRA_INDEX_URL: https://pypi.org/simple
      UV_DEFAULT_INDEX: https://download.pytorch.org/whl/cpu
      UV_EXTRA_INDEX_URL: https://pypi.org/simple
      UV_TORCH_BACKEND: cpu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Cache uv downloads
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Install CPU-only torch and project (system Python)
        run: |
          uv pip install --system \
            --index-url "$PIP_INDEX_URL" \
            --extra-index-url "$PIP_EXTRA_INDEX_URL" \
            "torch==2.5.1+cpu"
          uv pip install --system \
            --index-url "$PIP_INDEX_URL" \
            --extra-index-url "$PIP_EXTRA_INDEX_URL" \
            -e ".[dev]"

      - name: Build AtlasTiny v1 artefact
        env:
          VITERBO_CPU_LIMIT: "0"
        run: |
          python notebooks/atlas_tiny_build.py

      - name: Render notebooks to Markdown (code hidden)
        env:
          VITERBO_CPU_LIMIT: "0"
        run: |
          python scripts/render_notebooks.py \
            --to md --out docs/notebooks --pattern "*.py" --index docs/notebooks/index.md --hide-input || true

      - name: Build MkDocs (strict + link check)
        run: mkdocs build --strict

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
