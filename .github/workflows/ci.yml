name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * 1"

env:
  PIP_INDEX_URL: https://download.pytorch.org/whl/cpu
  PIP_EXTRA_INDEX_URL: https://pypi.org/simple
  UV_DEFAULT_INDEX: https://download.pytorch.org/whl/cpu
  UV_EXTRA_INDEX_URL: https://pypi.org/simple
  UV_TORCH_BACKEND: cpu

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Ensure bash is available
        if: runner.os == 'Linux'
        run: |
          if ! command -v bash >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y bash
          fi

      - uses: taiki-e/install-action@v2
        with:
          tool: just

      - uses: astral-sh/setup-uv@v3

      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Run CI (CPU torch)
        run: just ci-cpu

      - name: Run Deep Tests
        run: just test-deep-sys

      - name: Run Benchmarks (smoke)
        run: just bench-sys

  longhaul-regression:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Ensure bash is available
        if: runner.os == 'Linux'
        run: |
          if ! command -v bash >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y bash
          fi

      - uses: taiki-e/install-action@v2
        with:
          tool: just

      - uses: astral-sh/setup-uv@v3

      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Run longhaul tests
        run: just test-longhaul

      - name: Run longhaul benchmarks
        run: just bench-longhaul

      - name: Upload benchmark artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: longhaul-benchmarks
          path: .benchmarks
          if-no-files-found: warn
          retention-days: 30
