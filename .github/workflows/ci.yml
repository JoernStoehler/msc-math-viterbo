name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * 1"

jobs:
  format_lint:
    runs-on: ubuntu-latest
    env:
      JAX_ENABLE_X64: "1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Cache uv packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Sync dependencies (uv)
        run: uv sync --extra dev

      - name: Check policy waivers
        run: uv run python scripts/check_waivers.py

      - name: Ruff format check
        run: uv run ruff format --check .

      - name: Ruff lint
        run: uv run ruff check .

      - name: Prettier check (Markdown/JSON/YAML)
        run: >-
          npx prettier --check
          "README.md"
          "docs/**/*.{md,mdx}"
          "progress-reports/**/*.md"
          "**/*.{yml,yaml,json}"
          "!node_modules/**"
          "!.benchmarks/**"
          "!site/**"

  typecheck:
    runs-on: ubuntu-latest
    needs: format_lint
    env:
      JAX_ENABLE_X64: "1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Cache uv packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Sync dependencies (uv)
        run: uv sync --extra dev

      - name: Pyright
        run: uv run pyright

  tests:
    runs-on: ubuntu-latest
    needs: [format_lint, typecheck]
    env:
      JAX_ENABLE_X64: "1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Cache uv packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Sync dependencies (uv)
        run: uv sync --extra dev

      - name: Pytest (smoke + coverage)
        run: >-
          uv run pytest
          -m "not deep and not longhaul"
          --timeout=$SMOKE_TEST_TIMEOUT
          --timeout-method=thread
          --cov=src/viterbo
          --cov-report=term-missing
          --cov-report=xml
          --cov-report=html
          --cov-fail-under=80
        env:
          SMOKE_TEST_TIMEOUT: "45"

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
          if-no-files-found: warn
          retention-days: 7

  longhaul-regression:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      JAX_ENABLE_X64: "1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Cache uv packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Sync dependencies (uv)
        run: uv sync --extra dev

      - name: Run longhaul tests
        run: make test-longhaul

      - name: Run longhaul benchmarks
        run: make bench-longhaul

      - name: Upload benchmark artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: longhaul-benchmarks
          path: .benchmarks
          if-no-files-found: warn
          retention-days: 30
