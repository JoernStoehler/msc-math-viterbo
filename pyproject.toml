[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "viterbo"
version = "0.1.0"
description = "Numerical experiments around the Viterbo conjecture"
readme = "README.md"
authors = [{ name = "MSc Viterbo Team" }]
license = { file = "LICENSE" }
requires-python = ">=3.12"
dependencies = [
    "cvxpy>=1.7.3",
    "highspy>=1.11.0",
    "hypothesis>=6.140.3",
    "jax>=0.7.2",
    "optax>=0.2.4",
    "jaxtyping>=0.3.3",
    "numpy>=2.3.3",
    "networkx>=3.2.1",
    "orbax-checkpoint>=0.11.25",
    "pyarrow>=21.0.0",
    "scipy>=1.16.2",
    "tensorboardx>=2.6.4",
    "wandb>=0.22.1",
    # Planned ML stack once surrogate models ship:
    # "flax>=0.10.0",  # keep version aligned with optax/jax before enabling.
    # "diffrax>=0.6.0",  # enable only when ODE-based experiments are scheduled.
    # "equinox>=0.11.4",  # re-evaluate module system needs with maintainer buy-in.
    "equinox>=0.13.1",
    "datasets>=4.2.0",
]

[project.optional-dependencies]
dev = [
    "pyright>=1.1.406",
    "pytest>=8.4.2",
    "pytest-cov>=5.0.0",
    "pytest-timeout>=2.3.1",
    "pytest-xdist>=3.8.0",
    "pytest-testmon>=2.0.15",
    "pytest-benchmark>=5.1.0",
    "pytest-codspeed>=4.0.0",
    "pytest-profiling>=1.8.1",
    "pytest-line-profiler>=0.2.1",
    "line-profiler>=5.0.0",
    "scalene>=1.5.55",
    "py-spy>=0.4.1",
    "ruff>=0.13.3",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.40",
    "mkdocs-htmlproofer-plugin>=1.2.0",
    "pymdown-extensions>=10.8.1",
]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true

[tool.ruff]
line-length = 100
target-version = "py312"
src = ["src", "tests"]
extend-exclude = [
    ".benchmarks",
    "tmp/",
]

[tool.ruff.format]
indent-style = "space"
line-ending = "lf"
quote-style = "double"

[tool.ruff.lint]
# Prioritize correctness and policy; de-emphasize cosmetic style checks.
select = [
    "E7", "E9",          # error-class pycodestyle (runtime/syntax)
    "F",                  # pyflakes (unused/undefined)
    "D",                  # pydocstyle (Google), with targeted ignores below
    "TID252",             # ban relative imports (policy)
    "RUF100",             # prevent stale/noisy noqa
    "B006", "B008",      # bugbear: mutable defaults; function-call defaults
    "BLE001",             # bugbear: ban bare except blocks
    "T20",                # disallow print/debug statements
]
ignore = [
    "F722",  # jaxtyping annotations intentionally use string literals for shapes
    "D100",  # module docstring requirement is redundant with README documentation
    "D104",  # package docstring not necessary for __init__.py aggregator
    "D203",  # let formatter manage blank lines before class definitions
    "D212",  # allow summary on second line for multi-line docstrings
    "D401",  # relax imperative-mood nit
    "D417",  # argument documentation checks too noisy with Google style
    # De-emphasize docstring whitespace/formatting rules globally
    "D202",  # no blank line after function docstring
    "D205",  # blank line between summary and description
    "D301",  # use raw string for backslashes
]
typing-modules = ["jaxtyping"]
future-annotations = true

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["D"]
# Re-export aggregators: avoid F401 noise for curated public API.
"src/viterbo/__init__.py" = ["F401"]
"src/viterbo/**/__init__.py" = ["F401"]
# Private helper modules may omit docstrings; still lint formatting/content when present.
"src/viterbo/**/_*.py" = ["D101", "D102", "D103"]
# Experimental modules: relax docstring requirements during incubation.
"src/viterbo/geom.py" = ["D103", "D105", "D102", "RUF100"]
"src/viterbo/polytopes.py" = ["D103"]
"src/viterbo/capacity/minkowski_billiards.py" = ["D"]
"src/viterbo/capacity/reeb_cycles.py" = ["D"]
"src/viterbo/capacity/__init__.py" = ["BLE001"]
# Typing stubs package (`typings/`) may use relative imports internally.
"typings/**/*" = ["TID252"]
"notebooks/**" = ["T20", "I001", "D", "F401"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

# Coverage configuration for local coverage reports.
[tool.coverage.run]
branch = true
source = ["src/viterbo"]
